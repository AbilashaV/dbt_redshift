# **what?**
# Verifies python build on all code commited to the repository. This workflow
# should not require any secrets since it runs for PRs from forked repos. By
# default, secrets are not passed to workflows running from a forked repos.

# **why?**
# Ensure code for dbt meets a certain quality standard.

# **when?**
# This will run for all PRs, when code is pushed to main, and when manually triggered.
name: "Build release"

on:
    workflow_call:
        inputs:
            branch:
                description: "The branch/tag to run integration tests on"
                type: string
                default: "main"
            archive-name:
                description: "The name to use for the upload archive, leave blank for no upload"
                type: string
                default: ""
    workflow_dispatch:
        inputs:
            branch:
                description: "The branch/tag to run integration tests on"
                type: string
                default: "main"
            archive-name:
                description: "The name to use for the upload archive, leave blank for no upload"
                type: string
                default: ""

permissions: read-all

concurrency:
    group: "${{ github.workflow }}-${{ github.event_name }}-${{ inputs.archive-name }}"
    cancel-in-progress: true

jobs:
    build:
        name: "Build a release"
        runs-on: ubuntu-latest
        permissions:
            id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
        steps:
        -   name: "Check out ${{ github.repository }}@${{ inputs.branch }}"
            uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}

        -   name: "Setup environment"
            uses: dbt-labs/dbt-adapters/.github/actions/setup-environment@update-workflows
            with:
                python-version: ${{ vars.DBT_TEST_PYTHON_VERSION }}

        -   name: "Build ${{ github.event.repository.name }}"
            uses: dbt-labs/dbt-adapters/.github/actions/build-artifacts@update-workflows
            with:
                archive-name: ${{ inputs.archive-name }}
