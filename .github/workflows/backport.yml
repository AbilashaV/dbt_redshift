# **what?**
# - create a new PR to backport changes to the release branch in the label (see below)
# - create a comment on the merged PR indicating a failure if this workflow cannot create a backport due to merge conflicts
#
# **why?**
# - some changes need to be backported to prior release branches, e.g. security patches
# - automate and standardize the backport process
#
# **when?**
# - when a backport label is applied to a merged PR
#
# Backport label naming convention: "backport <branch to merge backport to>"
# Example: `backport 1.0.latest`
name: "Backport"

on:
    pull_request:
        types:
        -   labeled

permissions:
    pull-requests: write  # to create the PR
    contents: write  # to create the comment if the process fails

jobs:
    backport:
        runs-on: ubuntu-latest
        # Only react to merged PRs for security reasons
        # See https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target
        if: github.event.pull_request.merged && contains(github.event.label.name, 'backport')
        steps:
        -   uses: tibdex/backport@v2
            with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
